trigger:
  batch: true
  tags:
    include:
    - '*'
  branches:
    include:
    - main

stages:
  - stage: Publish
    condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
    dependsOn: []
    jobs:
      - job: Build
        pool:
          vmImage: ubuntu-latest
        timeoutInMinutes: 20
        variables:
          - name: version
            value: $[ replace(variables['Build.SourceBranch'], 'refs/tags/', '') ] 
        steps:
#//////////////////////////////////////////////////////////////////////
#// Prepare Environment 
#//////////////////////////////////////////////////////////////////////
        - task: UseDotNet@2
          inputs:
            version: '8.x'
            includePreviewVersions: true
        - script: npm install
          displayName: 'Restore Node.js modules'
        - script: dotnet tool restore
          displayName: 'Restore .NET tools'
        - script: npm install -g vsce
          displayName: 'Install VSCode builder'
#//////////////////////////////////////////////////////////////////////
#// Build
#//////////////////////////////////////////////////////////////////////
        - script: dotnet cake --target=vsix --configuration=release --arch=win-x64
          displayName: 'Build VSIX (win-x64)'
        - script: dotnet cake --target=vsix --configuration=release --arch=win-arm64
          displayName: 'Build VSIX (win-arm64)'
        - script: dotnet cake --target=vsix --configuration=release --arch=osx-x64
          displayName: 'Build VSIX (osx-x64)'
        - script: dotnet cake --target=vsix --configuration=release --arch=osx-arm64
          displayName: 'Build VSIX (osx-arm64)'
        - script: dotnet cake --target=vsix --configuration=release --arch=linux-x64
          displayName: 'Build VSIX (linux-x64)'
        - script: dotnet cake --target=vsix --configuration=release --arch=linux-arm64
          displayName: 'Build VSIX (linux-arm64)'
#//////////////////////////////////////////////////////////////////////
#// Publish
#//////////////////////////////////////////////////////////////////////
        - publish: '$(System.DefaultWorkingDirectory)/artifacts'
          displayName: 'Publish Artifacts'
          artifact: artifacts
        # - task: GitHubRelease@1
        #   inputs:
        #     gitHubConnection: 'upstream'
        #     repositoryName: '$(Build.Repository.Name)'
        #     action: 'create'
        #     tagSource: 'gitTag'
        #     assets: 'artifacts/DotRush*'
